//
//  softeer1.cpp
//  cpp
//
//  Created by Gukhee Jo on 5/30/23.
//

//#include <iostream>
//using namespace std;
//
//int main(){
//
//}

#include <iostream>
#include <sstream>
#include <vector>
using namespace std;


int solution(vector<int> param) {
    // cout << param.size() << endl;
    // cout << param[0] << endl;
    // cout << param[1] << endl;
    int score = 40;
    int board[16][16] = {
        {0, 0, 0, 0, 0, 0, 17, 17, 17, 17, 0, 0, 0, 0, 0, 0}, //0
        {0, 0, 0, 0, 0, 4, 17, 17, 17, 17, 1, 0, 0, 0, 0, 0}, //1
        {0, 0, 0, 7, 7, 4, 4, 12, 12, 1, 1, 5, 5, 0, 0, 0}, //2
        {0, 0, 7, 7, 7, 4, 4, 12, 12, 1, 1, 5, 5, 5, 0, 0}, //3
        {0, 0, 7, 7, 7, 4, 4, 12, 12, 1, 1, 5, 5, 5, 0, 0}, //4
        {0, 16, 16, 16, 16, 4, 4, 12, 12, 1, 1, 13, 13, 13, 13, 0}, //5
        {19, 19, 16, 16, 16, 16, 4, 12, 12, 1, 13, 13, 13, 13, 20, 20}, //6
        {19, 19, 10, 10, 10, 10, 10, 25, 25, 9, 9, 9, 9, 9, 20, 20}, //7
        {19, 19, 10, 10, 10, 10, 10, 25, 25, 9, 9, 9, 9, 9, 20, 20}, //8
        {19, 19, 15, 15, 15, 15, 3, 11, 11, 2, 14, 14, 14, 14, 20, 20}, //9
        {0, 15, 15, 15, 15, 3, 3, 11, 11, 2, 2, 14, 14, 14, 14, 0}, //10
        {0, 0, 6, 6, 6, 3, 3, 11, 11, 2, 2, 8, 8, 8, 0, 0}, //11
        {0, 0, 6, 6, 6, 3, 3, 11, 11, 2, 2, 8, 8, 8, 0, 0}, //12
        {0, 0, 0, 6, 6, 3, 3, 11, 11, 2, 2, 8, 8, 0, 0, 0}, //13
        {0, 0, 0, 0, 0, 3, 18, 18, 18, 18, 2, 0, 0, 0, 0, 0}, //14
        {0, 0, 0, 0, 0, 0, 18, 18, 18, 18, 0, 0, 0, 0, 0, 0} //15
    };
    int r[9][2] = {{5, 5}, {6, 6}, {7, 7}, {8, 8}, {17, 18}, {9, 10}, {11, 12}, {19, 20}, {25, 25}};
    // int y, x;
    for (int i = 0; i < param.size()/6; i++){
        // cin >> y >> x;
        int flag = 0;
        for (int j = 0;j < 6; j+=2){
            int x = param[i*3+j];
            int y = param[i*3+j+1];
                    // cout << "board " << board[y][x];
                    // cout << "r 0 " << r[i][0];
                    // cout << "r 1 " << r[i][1];
            if (board[y][x] == r[i][0]){
                    flag += r[i][0];
            }
            else if (board[y][x] == r[i][1]) {
                    flag += r[i][1];
            }
        }
        if(flag != 0){
            score += flag;
        }
        else{
            if (score % 2 == 1) score++;
        score /= 2;
                    if(score == 0 || score == 1){
                        score = 0;
                        break;
                    }
        }
    }
            
    
    return score;
}


//int solution(vector<int> param) {
//    int score = 40;
//    int board[16][16] = {
//        {0, 0, 0, 0, 0, 0, 17, 17, 17, 17, 0, 0, 0, 0, 0, 0}, //0
//        {0, 0, 0, 0, 0, 4, 17, 17, 17, 17, 1, 0, 0, 0, 0, 0}, //1
//        {0, 0, 0, 7, 7, 4, 4, 12, 12, 1, 1, 5, 5, 0, 0, 0}, //2
//        {0, 0, 7, 7, 7, 4, 4, 12, 12, 1, 1, 5, 5, 5, 0, 0}, //3
//        {0, 0, 7, 7, 7, 4, 4, 12, 12, 1, 1, 5, 5, 5, 0, 0}, //4
//        {0, 16, 16, 16, 16, 4, 4, 12, 12, 1, 1, 13, 13, 13, 13, 0}, //5
//        {19, 19, 16, 16, 16, 16, 4, 12, 12, 1, 13, 13, 13, 13, 20, 20}, //6
//        {19, 19, 10, 10, 10, 10, 10, 25, 25, 9, 9, 9, 9, 9, 20, 20}, //7
//        {19, 19, 10, 10, 10, 10, 10, 25, 25, 9, 9, 9, 9, 9, 20, 20}, //8
//        {19, 19, 15, 15, 15, 15, 3, 11, 11, 2, 14, 14, 14, 14, 20, 20}, //9
//        {0, 15, 15, 15, 15, 3, 3, 11, 11, 2, 2, 14, 14, 14, 14, 0}, //10
//        {0, 0, 6, 6, 6, 3, 3, 11, 11, 2, 2, 8, 8, 8, 0, 0}, //11
//        {0, 0, 6, 6, 6, 3, 3, 11, 11, 2, 2, 8, 8, 8, 0, 0}, //12
//        {0, 0, 0, 6, 6, 3, 3, 11, 11, 2, 2, 8, 8, 0, 0, 0}, //13
//        {0, 0, 0, 0, 0, 3, 18, 18, 18, 18, 2, 0, 0, 0, 0, 0}, //14
//        {0, 0, 0, 0, 0, 0, 18, 18, 18, 18, 0, 0, 0, 0, 0, 0} //15
//    };
//    int r[8][2] = {{5, 5}, {6, 6}, {7, 7}, {8, 8}, {17, 18}, {9, 10}, {11, 12}, {19, 20}, {25, 25}};
//    int y, x;
//    for (int i = 0; i < param.size()/2 ; i++){
//        cin >> y >> x;
//        if (board[y][x] == r[i][0]){
//            score += r[i][0];
//        }
//        else if (board[y][x] == r[i][1]) {
//            score += r[i][1];
//        }
//        else{
//            if (score % 2 == 1) score++;
//            score /= 2;
//        }
//    }
//
//    return score;
//}
